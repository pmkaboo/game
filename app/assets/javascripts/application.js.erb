// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require_tree .

// setup game variables
var ores = {
	gold: {
		amount: 0,
		miners: 0,
		modifier: 5,
		chance: 90 // %, 
	},
	ruby: {
		amount: 0,
		miners: 0,
		modifier: 30,
		chance: 20 // %
	}
};
var money = 0;
var ore_names = ["gold", "ruby"];
var tracked_values = ["amount", "miners"]

// setup game constants
var auto_save_delay = 30000; // ms
var save_message_delay = 4500; // ms

// load saved values
$(function() {
	$.each(ore_names, function( i, ore ) {
		$.each(tracked_values, function( i, value) {
			ores[ore][value] = parseInt($("#stats ." + ore + " ." + value).text());	
		})
		$("#stats ." + ore + " .value").text(ores[ore]["amount"]*ores[ore]["modifier"])
	});
	money = parseInt($("#stats .money .value").text());
});

// manual mining functions 
$.each(ore_names, function( i, ore ){
	$(document).on("click", ".ore." + ore, function(){
		if(Math.floor(Math.random() * 100) < ores[ore]["chance"]) {
			ores[ore]["amount"] += 1;
			update_stats(ores[ore]["amount"], ores[ore]["modifier"], ore);
		}
	});
});	

// manual save
$(document).on("click", ".save_game.btn", function(e) {
	e.preventDefault();
	save_game()
});

// auto save
setInterval(function() {
	save_game()
}, auto_save_delay);

// more stuff
function update_stats(material, modifier, klass) {
	$("#stats ." + klass + " .amount").text(material);
	$("#stats ." + klass + " .value").text(material * modifier);
}

function save_game() {
	$.ajax({
		type: "POST",
		url: "/home/save",
		data: {game_data: {
			gold: ores["gold"],
			ruby: ores["ruby"],
			money: money
		}},
		success: function(msg) {
			$("#notification").text(msg);
			$("#notification").show();
			setTimeout(function() {
		        $("#notification").fadeOut(500)
		    }, save_message_delay);
		}
	})
}





